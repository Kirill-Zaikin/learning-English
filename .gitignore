# Байт-компилированные / оптимизированные / DLL файлы
__pycache__/
*.py[cod]
*$py.class
*.pyc

# C расширения
*.so

# Распаковка / упаковка
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Обычно эти файлы записываются Python-скриптом из шаблона
# перед тем, как PyInstaller создает exe, чтобы добавить дату / другую информацию в него.
*.manifest
*.spec

# Логи установщика
pip-log.txt
pip-delete-this-directory.txt

# Отчеты по юнит-тестам / покрытию
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Переводы
*.mo
*.pot

# Django файлы:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask файлы:
instance/
.webassets-cache

# Scrapy файлы:
.scrapy

# Документация Sphinx
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   Согласно pypa/pipenv#598, рекомендуется включать Pipfile.lock в контроль версий.
#   Однако, при совместной работе, если у вас есть зависимости, специфичные для платформы, или зависимости, 
#   не поддерживающие кроссплатформенность, pipenv может установить зависимости, которые не работают, или не 
#   установить все необходимые зависимости.
#Pipfile.lock

# PEP 582; используется, например, github.com/David-OConnor/pyflow
__pypackages__/

# Celery файлы
celerybeat-schedule
celerybeat.pid

# SageMath разобранные файлы
*.sage.py

# Окружения
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Настройки проекта Spyder
.spyderproject
.spyproject

# Настройки проекта Rope
.ropeproject

# Документация mkdocs
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типов Pyre
.pyre/

# Файлы менеджера файлов Mac OS X
.DS_Store
